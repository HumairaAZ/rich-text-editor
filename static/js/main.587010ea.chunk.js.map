{"version":3,"sources":["components/RichTextEditorToolbar.js","components/RichTextEditor.js","index.js"],"names":["RichTextEditorToolbar","_ref","onBold","onItalic","onUnderline","onImage","onCode","onTable","_jsx","AppBar","position","children","_jsxs","Toolbar","Typography","variant","IconButton","color","onClick","FormatBold","FormatItalic","FormatUnderlined","Image","Code","TableChart","RichTextEditor","editorState","setEditorState","useState","EditorState","createEmpty","toggleInlineStyle","style","RichUtils","onBoldClick","onItalicClick","onUnderlineClick","onImageClick","url","prompt","entityKey","getCurrentContent","createEntity","src","getLastCreatedEntityKey","AtomicBlockUtils","insertAtomicBlock","onCodeClick","onTableClick","rows","columns","table","Array","from","length","repeat","join","className","moveFocusToEnd","Editor","handleKeyCommand","command","newState","placeholder","onChange","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"+UA8BeA,MA1BeC,IAAA,IAAC,OAAEC,EAAM,SAAEC,EAAQ,YAAEC,EAAW,QAAEC,EAAO,OAAEC,EAAM,QAAEC,GAASN,EAAA,OACxFO,cAACC,IAAM,CAACC,SAAS,SAAQC,SACvBC,eAACC,IAAO,CAAAF,SAAA,CACNH,cAACM,IAAU,CAACC,QAAQ,KAAIJ,SAAC,qBACzBH,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAAShB,EAAOS,SAC1CH,cAACW,IAAU,MAEbX,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASf,EAASQ,SAC5CH,cAACY,IAAY,MAEfZ,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASd,EAAYO,SAC/CH,cAACa,IAAgB,MAEnBb,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASb,EAAQM,SAC3CH,cAACc,IAAK,MAERd,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASZ,EAAOK,SAC1CH,cAACe,IAAI,MAEPf,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASX,EAAQI,SAC3CH,cAACgB,IAAU,UAGR,E,OC6CIC,MAlEQA,KACrB,MAAOC,EAAaC,GAAkBC,mBAASC,cAAYC,eAWrDC,EAAqBC,IACzBL,EAAeM,YAAUF,kBAAkBL,EAAaM,GAAO,EA+BjE,OACEpB,eAAA,OAAAD,SAAA,CACEH,cAACR,EAAqB,CACpBE,OA/BcgC,IAAMH,EAAkB,QAgCtC5B,SA/BgBgC,IAAMJ,EAAkB,UAgCxC3B,YA/BmBgC,IAAML,EAAkB,aAgC3C1B,QA9BegC,KACnB,MAAMC,EAAMC,OAAO,mBACnB,GAAID,EAAK,CACP,MAEME,EAFed,EAAYe,oBACWC,aAAa,QAAS,YAAa,CAAEC,IAAKL,IAC7CM,0BACzCjB,EAAekB,mBAAiBC,kBAAkBpB,EAAac,EAAW,KAC5E,GAwBIlC,OArBcyC,IAAMhB,EAAkB,QAsBtCxB,QApBeyC,KACnB,MAAMC,EAAOV,OAAO,wBACdW,EAAUX,OAAO,2BACvB,GAAIU,GAAQC,EAAS,CACnB,MAAMC,EAAQC,MAAMC,KAAK,CAAEC,OAAQL,IAAQ,IAAM,KAAO,QAAQM,OAAOL,KAAUM,KAAK,MAGhFhB,EAFed,EAAYe,oBACWC,aAAa,QAAS,YAAa,CAAES,UACxCP,0BACzCjB,EAAekB,mBAAiBC,kBAAkBpB,EAAac,EAAW,KAC5E,KAaEhC,cAAA,OAAKiD,UAAU,mBAAmBvC,QAASA,IAAMS,EAAeE,cAAY6B,eAAehC,IAAcf,SACvGH,cAACmD,SAAM,CACLjC,YAAaA,EACbkC,iBAtDkBC,IACxB,MAAMC,EAAW7B,YAAU2B,iBAAiBlC,EAAamC,GACzD,OAAIC,GACFnC,EAAemC,GACR,WAEF,aAAa,EAiDdC,YAAY,kBACZC,SAAUrC,QAGV,EC/DVsC,IAASC,OACP1D,cAAC2D,IAAMC,WAAU,CAAAzD,SACfH,cAACiB,EAAc,MAEjB4C,SAASC,eAAe,Q","file":"static/js/main.587010ea.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { FormatBold, FormatItalic, FormatUnderlined, Image, Code, TableChart } from '@material-ui/icons';\n\nconst RichTextEditorToolbar = ({ onBold, onItalic, onUnderline, onImage, onCode, onTable }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\">Rich Text Editor</Typography>\n      <IconButton color=\"inherit\" onClick={onBold}>\n        <FormatBold />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onItalic}>\n        <FormatItalic />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onUnderline}>\n        <FormatUnderlined />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onImage}>\n        <Image />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onCode}>\n        <Code />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onTable}>\n        <TableChart />\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default RichTextEditorToolbar;\n","import React, { useState } from 'react';\nimport { Editor, EditorState, RichUtils, AtomicBlockUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport RichTextEditorToolbar from './RichTextEditorToolbar';\nimport './RichTextEditor.css';\n\nconst RichTextEditor = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleKeyCommand = (command) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const toggleInlineStyle = (style) => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, style));\n  };\n\n  const onBoldClick = () => toggleInlineStyle('BOLD');\n  const onItalicClick = () => toggleInlineStyle('ITALIC');\n  const onUnderlineClick = () => toggleInlineStyle('UNDERLINE');\n\n  const onImageClick = () => {\n    const url = prompt('Enter image URL');\n    if (url) {\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity('IMAGE', 'IMMUTABLE', { src: url });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      setEditorState(AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' '));\n    }\n  };\n\n  const onCodeClick = () => toggleInlineStyle('CODE');\n\n  const onTableClick = () => {\n    const rows = prompt('Enter number of rows');\n    const columns = prompt('Enter number of columns');\n    if (rows && columns) {\n      const table = Array.from({ length: rows }, () => '| ' + '   | '.repeat(columns)).join('\\n');\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity('TABLE', 'IMMUTABLE', { table });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      setEditorState(AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' '));\n    }\n  };\n\n  return (\n    <div>\n      <RichTextEditorToolbar\n        onBold={onBoldClick}\n        onItalic={onItalicClick}\n        onUnderline={onUnderlineClick}\n        onImage={onImageClick}\n        onCode={onCodeClick}\n        onTable={onTableClick}\n      />\n      <div className=\"editor-container\" onClick={() => setEditorState(EditorState.moveFocusToEnd(editorState))}>\n        <Editor\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          placeholder=\"Start typing...\"\n          onChange={setEditorState}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RichTextEditor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RichTextEditor from './components/RichTextEditor';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RichTextEditor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}