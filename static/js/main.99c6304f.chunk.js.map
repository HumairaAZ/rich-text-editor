{"version":3,"sources":["components/RichTextEditorToolbar.js","components/RichTextEditor.js","index.js"],"names":["RichTextEditorToolbar","_ref","onBold","onItalic","onUnderline","onImage","onCode","onTable","_jsx","AppBar","position","children","_jsxs","Toolbar","Typography","variant","IconButton","color","onClick","FormatBold","FormatItalic","FormatUnderlined","Image","Code","TableChart","RichTextEditor","editorState","setEditorState","useState","savedContent","localStorage","getItem","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","useEffect","contentState","getCurrentContent","setItem","stringify","convertToRaw","onBoldClick","RichUtils","toggleInlineStyle","onItalicClick","onUnderlineClick","onImageClick","url","prompt","entityKey","createEntity","src","getLastCreatedEntityKey","AtomicBlockUtils","insertAtomicBlock","onCodeClick","toggleCode","onTableClick","rows","columns","table","Array","from","length","repeat","join","className","Editor","handleKeyCommand","command","newState","onChange","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"+UA8BeA,MA1BeC,IAAA,IAAC,OAAEC,EAAM,SAAEC,EAAQ,YAAEC,EAAW,QAAEC,EAAO,OAAEC,EAAM,QAAEC,GAASN,EAAA,OACxFO,cAACC,IAAM,CAACC,SAAS,SAAQC,SACvBC,eAACC,IAAO,CAAAF,SAAA,CACNH,cAACM,IAAU,CAACC,QAAQ,KAAIJ,SAAC,qBACzBH,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAAShB,EAAOS,SAC1CH,cAACW,IAAU,MAEbX,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASf,EAASQ,SAC5CH,cAACY,IAAY,MAEfZ,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASd,EAAYO,SAC/CH,cAACa,IAAgB,MAEnBb,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASb,EAAQM,SAC3CH,cAACc,IAAK,MAERd,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASZ,EAAOK,SAC1CH,cAACe,IAAI,MAEPf,cAACQ,IAAU,CAACC,MAAM,UAAUC,QAASX,EAAQI,SAC3CH,cAACgB,IAAU,UAGR,E,OC6CIC,MAlEQA,KACrB,MAAOC,EAAaC,GAAkBC,oBAAS,KAC7C,MAAMC,EAAeC,aAAaC,QAAQ,WAC1C,OAAOF,EAAeG,cAAYC,kBAAkBC,yBAAeC,KAAKC,MAAMP,KAAkBG,cAAYK,aAAa,IAG3HC,qBAAU,KACR,MAAMC,EAAeb,EAAYc,oBACjCV,aAAaW,QAAQ,UAAWN,KAAKO,UAAUC,uBAAaJ,IAAe,GAC1E,CAACb,IAoCJ,OACEd,eAAA,OAAAD,SAAA,CACEH,cAACR,EAAqB,CACpBE,OA5Bc0C,IAAMjB,EAAekB,YAAUC,kBAAkBpB,EAAa,SA6B5EvB,SA5BgB4C,IAAMpB,EAAekB,YAAUC,kBAAkBpB,EAAa,WA6B9EtB,YA5BmB4C,IAAMrB,EAAekB,YAAUC,kBAAkBpB,EAAa,cA6BjFrB,QA5Be4C,KACnB,MAAMC,EAAMC,OAAO,mBACnB,GAAID,EAAK,CACP,MAEME,EAFe1B,EAAYc,oBACWa,aAAa,QAAS,YAAa,CAAEC,IAAKJ,IAC7CK,0BACzC5B,EAAe6B,mBAAiBC,kBAAkB/B,EAAa0B,EAAW,KAC5E,GAsBI9C,OApBcoD,IAAM/B,EAAekB,YAAUc,WAAWjC,IAqBxDnB,QApBeqD,KACnB,MAAMC,EAAOV,OAAO,wBACdW,EAAUX,OAAO,2BACvB,GAAIU,GAAQC,EAAS,CACnB,MAAMC,EAAQC,MAAMC,KAAK,CAAEC,OAAQL,IAAQ,IAAM,KAAO,QAAQM,OAAOL,KAAUM,KAAK,MAGhFhB,EAFe1B,EAAYc,oBACWa,aAAa,QAAS,YAAa,CAAEU,UACxCR,0BACzC5B,EAAe6B,mBAAiBC,kBAAkB/B,EAAa0B,EAAW,KAC5E,KAaE5C,cAAA,OAAK6D,UAAU,mBAAkB1D,SAC/BH,cAAC8D,SAAM,CACL5C,YAAaA,EACb6C,iBA/CiBA,CAACC,EAAS9C,KACjC,MAAM+C,EAAW5B,YAAU0B,iBAAiB7C,EAAa8C,GACzD,OAAIC,GACF9C,EAAe8C,GACR,WAEF,aAAa,EA0CdC,SAAU/C,QAGV,EC/DVgD,IAASC,OACPpE,cAACqE,IAAMC,WAAU,CAAAnE,SACfH,cAACiB,EAAc,MAEjBsD,SAASC,eAAe,Q","file":"static/js/main.99c6304f.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { FormatBold, FormatItalic, FormatUnderlined, Image, Code, TableChart } from '@material-ui/icons';\n\nconst RichTextEditorToolbar = ({ onBold, onItalic, onUnderline, onImage, onCode, onTable }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\">Rich Text Editor</Typography>\n      <IconButton color=\"inherit\" onClick={onBold}>\n        <FormatBold />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onItalic}>\n        <FormatItalic />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onUnderline}>\n        <FormatUnderlined />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onImage}>\n        <Image />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onCode}>\n        <Code />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onTable}>\n        <TableChart />\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default RichTextEditorToolbar;\n","import React, { useState, useEffect } from 'react';\nimport { Editor, EditorState, RichUtils, AtomicBlockUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport RichTextEditorToolbar from './RichTextEditorToolbar';\nimport './RichTextEditor.css';\n\nconst RichTextEditor = () => {\n  const [editorState, setEditorState] = useState(() => {\n    const savedContent = localStorage.getItem('content');\n    return savedContent ? EditorState.createWithContent(convertFromRaw(JSON.parse(savedContent))) : EditorState.createEmpty();\n  });\n\n  useEffect(() => {\n    const contentState = editorState.getCurrentContent();\n    localStorage.setItem('content', JSON.stringify(convertToRaw(contentState)));\n  }, [editorState]);\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const onBoldClick = () => setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n  const onItalicClick = () => setEditorState(RichUtils.toggleInlineStyle(editorState, 'ITALIC'));\n  const onUnderlineClick = () => setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n  const onImageClick = () => {\n    const url = prompt('Enter image URL');\n    if (url) {\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity('IMAGE', 'IMMUTABLE', { src: url });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      setEditorState(AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' '));\n    }\n  };\n  const onCodeClick = () => setEditorState(RichUtils.toggleCode(editorState));\n  const onTableClick = () => {\n    const rows = prompt('Enter number of rows');\n    const columns = prompt('Enter number of columns');\n    if (rows && columns) {\n      const table = Array.from({ length: rows }, () => '| ' + '   | '.repeat(columns)).join('\\n');\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity('TABLE', 'IMMUTABLE', { table });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      setEditorState(AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' '));\n    }\n  };\n\n  return (\n    <div>\n      <RichTextEditorToolbar\n        onBold={onBoldClick}\n        onItalic={onItalicClick}\n        onUnderline={onUnderlineClick}\n        onImage={onImageClick}\n        onCode={onCodeClick}\n        onTable={onTableClick}\n      />\n      <div className=\"editor-container\">\n        <Editor\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          onChange={setEditorState}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RichTextEditor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RichTextEditor from './components/RichTextEditor';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RichTextEditor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}