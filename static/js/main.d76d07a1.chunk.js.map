{"version":3,"sources":["components/RichTextEditorToolbar.js","components/RichTextEditor.js","index.js"],"names":["RichTextEditorToolbar","_ref","onBold","onItalic","onUnderline","onStrikethrough","onBulletList","onNumberList","onUndo","onRedo","_jsx","AppBar","position","className","children","_jsxs","Toolbar","Typography","variant","IconButton","color","onClick","FormatBold","FormatItalic","FormatUnderlined","FormatStrikethrough","FormatListBulleted","FormatListNumbered","Undo","Redo","blockRenderMap","DefaultDraftBlockRenderMap","RichTextEditor","editorState","setEditorState","useState","savedContent","localStorage","getItem","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","useEffect","contentState","getCurrentContent","setItem","stringify","convertToRaw","toggleInlineStyle","style","RichUtils","toggleBlockType","blockType","onBoldClick","onItalicClick","onUnderlineClick","onStrikethroughClick","onBulletListClick","onNumberListClick","undo","redo","moveFocusToEnd","Editor","handleKeyCommand","command","newState","placeholder","onChange","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d76d07a1.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { FormatBold, FormatItalic, FormatUnderlined, FormatStrikethrough, FormatListBulleted, FormatListNumbered, Undo, Redo } from '@material-ui/icons';\n\nconst RichTextEditorToolbar = ({ onBold, onItalic, onUnderline, onStrikethrough, onBulletList, onNumberList, onUndo, onRedo }) => (\n  <AppBar position=\"static\" className=\"bg-gray-800\">\n    <Toolbar>\n      <Typography variant=\"h6\" className=\"text-white\">Rich Text Editor</Typography>\n      <IconButton color=\"inherit\" onClick={onBold} aria-label=\"Bold\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatBold />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onItalic} aria-label=\"Italic\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatItalic />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onUnderline} aria-label=\"Underline\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatUnderlined />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onStrikethrough} aria-label=\"Strikethrough\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatStrikethrough />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onBulletList} aria-label=\"Bullet List\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatListBulleted />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onNumberList} aria-label=\"Number List\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <FormatListNumbered />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onUndo} aria-label=\"Undo\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <Undo />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={onRedo} aria-label=\"Redo\" className=\"hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-110\">\n        <Redo />\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default RichTextEditorToolbar;\n","import React, { useState, useEffect } from 'react';\nimport { Editor, EditorState, RichUtils, DefaultDraftBlockRenderMap, convertToRaw, convertFromRaw } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport RichTextEditorToolbar from './RichTextEditorToolbar';\nimport './RichTextEditor.css';\n\nconst blockRenderMap = DefaultDraftBlockRenderMap;\n\nconst RichTextEditor = () => {\n  const [editorState, setEditorState] = useState(() => {\n    const savedContent = localStorage.getItem('content');\n    return savedContent ? EditorState.createWithContent(convertFromRaw(JSON.parse(savedContent))) : EditorState.createEmpty();\n  });\n\n  useEffect(() => {\n    const contentState = editorState.getCurrentContent();\n    localStorage.setItem('content', JSON.stringify(convertToRaw(contentState)));\n  }, [editorState]);\n\n  const handleKeyCommand = (command) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const toggleInlineStyle = (style) => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, style));\n  };\n\n  const onBoldClick = () => toggleInlineStyle('BOLD');\n  const onItalicClick = () => toggleInlineStyle('ITALIC');\n  const onUnderlineClick = () => toggleInlineStyle('UNDERLINE');\n  const onStrikethroughClick = () => toggleInlineStyle('STRIKETHROUGH');\n  const onBulletListClick = () => toggleBlockType('unordered-list-item');\n  const onNumberListClick = () => toggleBlockType('ordered-list-item');\n\n  const undo = () => setEditorState(EditorState.undo(editorState));\n  const redo = () => setEditorState(EditorState.redo(editorState));\n\n  const toggleBlockType = (blockType) => {\n    setEditorState(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  return (\n    <div className=\"p-4 max-w-2xl mx-auto bg-white rounded shadow-lg\">\n      <RichTextEditorToolbar\n        onBold={onBoldClick}\n        onItalic={onItalicClick}\n        onUnderline={onUnderlineClick}\n        onStrikethrough={onStrikethroughClick}\n        onBulletList={onBulletListClick}\n        onNumberList={onNumberListClick}\n        onUndo={undo}\n        onRedo={redo}\n      />\n      <div className=\"editor-container mt-4 p-4 border border-gray-300 rounded bg-white min-h-[200px] cursor-text focus:outline-none transition duration-300 ease-in-out transform hover:shadow-lg hover:border-gray-400\" onClick={() => setEditorState(EditorState.moveFocusToEnd(editorState))}>\n        <Editor\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          blockRenderMap={blockRenderMap}\n          placeholder=\"Start typing...\"\n          onChange={setEditorState}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RichTextEditor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RichTextEditor from './components/RichTextEditor';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RichTextEditor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}